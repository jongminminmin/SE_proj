import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'ac.kr.changwon'
version = '0.0.1-SNAPSHOT'

def os = OperatingSystem.current()

def javaHome=os.windows
        ? project.findProperty('javaHome.windows') : project.findProperty('javaHome.linux')
tasks.withType(JavaCompile).configureEach {
    options.fork = true
    options.forkOptions.javaHome = file(javaHome)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}




sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
            // 테스트에서 메인 소스 참조
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'io.github.wimdeblauwe:htmx-spring-boot:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.session:spring-session-jdbc'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.graphql:spring-graphql-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.boot', name : 'spring-boot-starter-data-jpa'
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.2'
    implementation group: 'org.springframework.boot', name : 'spring-boot-starter-thymeleaf'
    implementation group: 'org.springframework.boot', name : 'spring-boot-starter-oauth2-client'
    implementation group : 'org.springframework.security', name : 'spring-security-oauth2-client'
    // 웹소켓 및 메시징 브로커용 의존성
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // (선택) thymeleaf로 페이지 연결 시
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//    testImplementation 'org.mockito:mockito-core:5.10.0'
//    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'com.h2database:h2'


}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', 'test'
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
